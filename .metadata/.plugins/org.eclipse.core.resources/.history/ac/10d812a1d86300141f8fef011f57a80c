package DataStructures;

public class Stack{
	Node top;
	int items;
	
	public class Node{
		Node up;
		Node down;
		int data;
		
		public Node(){}
		
		public Node(int data){
			this.up = null;
			this.down = null;
			this.data = data;
		}
		
	}
	
	public Stack(){
		this.top = null;
		this.items = 1;
	}
	
	public void push(int data){
		Node newNode = new Node(data);
		if(isEmpty()){
			top = newNode;
		} else {
			top.up = newNode;
			newNode.down = top;
			top = newNode;
		}
		items++;
	}
	
	public int pop(){
		if(isEmpty()){
			return -1; //negative means error
		}
		int data = top.data;
		top = top.down;
		top.up = null;
		items--;
		return data;
	}
	
	public int peek(){
		if(isEmpty()){
			return -1;//negative means error;
		}
		return top.data;
	}

	public boolean isEmpty(){
		if(items == 0){
			return true;
		}
		return false;
	}
	
	public int numberOfItems(){
		return items;
	}
}

