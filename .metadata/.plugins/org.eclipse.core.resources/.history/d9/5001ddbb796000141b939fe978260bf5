import java.util.HashMap;

import DataStructures.*;
import Algorithm.*;
public class Test{

	public static void main(String[] args){
		//testLinkedList();
		//testSecretSantaGenerator();
		//testIsPermutation();
		//testReplaceSpaces();
		//testCompressString();
		//testRotateMatrix();
		long[] inputArray =  {1,2,3,4,5,6,7,8,9};
		int arrayLength = inputArray.length;
		arrayLength = arrayLength^2;
		System.out.println("length = " + inputArray.length + " square of length = " + arrayLength);
		
	}

	//test methods for LinkedList class
	public static void  testLinkedList(){
		LinkedList ListOne = new LinkedList();
		LinkedList ListTwo = new LinkedList();
		int[] testArray = {1,2,3,4,5};
		for(int i = 0; i < testArray.length;i++){
			ListOne.insertFront(testArray[i]);
			ListTwo.insertBack(testArray[i]);
		}
		ListOne.printList(); //print 5,4,3,2,1
		ListTwo.printList(); //print 1,2,3,4,5
		System.out.println(ListOne.getLength()); //print 5
		ListOne.deleteFirst(); //delete head
		ListOne.printList(); //print 4,3,2,1
		ListOne.deleteLast();  //delete tail
		ListOne.printList(); //print 4,3,2
		ListOne.deleteIndex(1); //delete element at index 1(second from head)
		ListOne.printList(); //print 4,2
		System.out.println(ListOne.getLength()); //print 2
	}
	
	public static void testSecretSantaGenerator(){
		String[] people = {"Pikachu","Charmender","Mew","Zaptos","Entei","Eve","Lapras"};
		HashMap<String,String> pairing = SecretSantaGenerator.matcher(people);
		SecretSantaGenerator.printHashMap(pairing);
	}
	
	public static void testIsPermutation(){
		
		String stringOne = "abccd";
		String stringTwo = "cadcb";
		String stringThree ="abdcacc";
		if(AlgorithmTwo.isPermutation(stringOne, stringTwo)){
			System.out.println(stringOne + " is a permutation of " + stringTwo);
		}
		if(!AlgorithmTwo.isPermutation(stringOne, stringThree)){
			System.out.println(stringOne + " is not a permutation of " + stringThree);
		}
	}
	
	public static void testReplaceSpaces(){
		String inputString = "Mr John Smith";
		String newString = ReplaceSpaces.replaceSpaces(inputString);
		System.out.println(inputString); // prints Mr John Smith
		System.out.println(newString); // prints Mr%20John%20Smith
	}
	
	public static void testCompressString(){
		String stringOne = "aabcccccaaa";
		String stringTwo = "aabbccdddz";
		System.out.println(CompressString.compressString(stringOne)); // prints a2b1c5a3
		System.out.println(CompressString.compressString(stringTwo)); // prints aabbccdddz because new compress String is same length
	}
	
	public static void testRotateMatrix(){
		long[] inputArray =  {1,2,3,4,5,6,7,8,9};
		long[][] matrix = RotateMatrix.createMatrix(inputArray); //Returns an NxN matrix
		RotateMatrix.printMatrix(matrix); // print matrix
		System.out.println("***************************");
		RotateMatrix.printMatrix(RotateMatrix.ninetyDegrees(matrix)); //Return a new matrix rotated by ninety degrees and print it
		System.out.println("***************************");
		RotateMatrix.ninetyDegreesInPlace(matrix);// Rotate matrix in place
		RotateMatrix.printMatrix(matrix);// print matrix rotated ninety degrees
		
	}
}